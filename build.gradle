plugins {
    id "com.jfrog.artifactory" version "4.9.0"
    id "maven-publish"
    id "fabric-loom" version "0.2.4-SNAPSHOT"
}

def minecraftVersion = "1.14.3"
def yarnMappings = "1.14.3+build.12"
def loaderVersion = "0.4.8+build.155"

archivesBaseName = "cotton"
version = "1.0.0-rc.2"
group = "io.github.cottonmc.cotton"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    maven {
        name = "Cotton"
        url = "http://server.bbkr.space:8081/artifactory/libs-release/"
    }
    maven {
        name = "Cotton (snapshots)"
        url = "http://server.bbkr.space:8081/artifactory/libs-snapshot/"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:$minecraftVersion"
    mappings "net.fabricmc:yarn:$yarnMappings"
    modImplementation "net.fabricmc:fabric-loader:$loaderVersion"

    // `modApi`s below are for the dev env
    def modules = ["player-events", "logging", "config", "datapack", "commons", "cauldron"]
    modules.each { module ->    
        modApi ("io.github.cottonmc.cotton:cotton-$module:latest.release") { transitive = false }
        include "io.github.cottonmc.cotton:cotton-$module:latest.release"
    }
    modApi ("io.github.cottonmc:Jankson:1.0.0+j1.1.2") { transitive = false }
    modApi ("io.github.cottonmc:LibCD:1.3.0+1.14.3") { transitive = false }
    include "io.github.cottonmc:Jankson:1.0.0+j1.1.2"
    include "io.github.cottonmc:LibCD:1.3.0+1.14.3"

    compileOnly ("com.google.code.findbugs:jsr305:3.0.2") { transitive = false }

    // For ModMenu compatibility tests
    modImplementation "net.fabricmc.fabric-api:fabric-api:0.3.0+build.187"
    modImplementation "io.github.prospector.modmenu:ModMenu:1.6.3-94"
}


processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from rootProject.files("LICENSE")
}

publishing {
    publications {
        maven(MavenPublication) {
            artifact ("${project.buildDir.absolutePath}/libs/${archivesBaseName}-${project.version}.jar") {
                classifier null
                builtBy remapJar
            }

            artifact ("${project.buildDir.absolutePath}/libs/${archivesBaseName}-${project.version}-dev.jar") {
                classifier "dev"
                builtBy remapJar
            }

            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }
}

//Publishing details
if (rootProject.file("private.gradle").exists()) {
	apply from: "private.gradle"
}

artifactory {
    if (rootProject.hasProperty("artifactoryUsername")) {
        contextUrl = "http://server.bbkr.space:8081/artifactory/libs-release/"
        publish {
            repository {
                username = artifactoryUsername
                password = artifactoryPassword
            }
            defaults {
                publications("maven")

                publishArtifacts = true
                publishPom = true
            }
        }
    } else {
        println "Cannot configure artifactory; please define ext.artifactoryUsername and ext.artifactoryPassword before running artifactoryPublish"
    }
}
